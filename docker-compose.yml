version: '3.7'

services:
  mongodb:
      image: mongo
      restart: always
      volumes:
        # - ./src/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
        - data:/data/db
      # env_file: 
      #   - ./src/config/.env
      environment:
        MONGO_INITDB_DATABASE: db
        MONGO_INITDB_ROOT_USERNAME: fisayo
        MONGO_INITDB_ROOT_PASSWORD: secret
  user_service:
    container_name: user_service
    build:
      context: ./userService
      dockerfile: Dockerfile
    command: npm start
    volumes: 
      - ./userService/:/src
      - /src/node_modules
    environment: 
      MONGO_ADDRESS: mongodb
    ports:
      - 8080:4000
    depends_on:
      - mongodb
  task_service:
    container_name: task_service
    build:
      context: ./task-service
      dockerfile: Dockerfile
    volumes:
      - ./task-service/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
      # - 9229:9229
    command: npm run start
    env_file:
      - ./task-service/src/config/.env
    # networks:
    #   - webnet
    depends_on:
    #   - redis
      - postgres
  # redis:
  #   container_name: redis
  #   image: redis:5
  #   networks:
  #     - webnet
  postgres:
    container_name: postgres
    restart: always
    image: postgres:12
  #   networks:
  #     - webnet
    # environment:
      # POSTGRES_HOST: postgres
    #   POSTGRES_PASSWORD: ${DB_PASSWORD}
    #   POSTGRES_USER: ${DB_USERNAME}
    #   POSTGRES_DB: ${DB_DATABASE_NAME}
    #   PG_DATA: /var/lib/postgresql/data
    env_file:
      - ./task-service/src/config/.env
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
 
volumes:
  data:
  pgdata:

  
